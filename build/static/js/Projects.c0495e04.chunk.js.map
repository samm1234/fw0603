{"version":3,"sources":["routes/User/Post/components/CreateForm/CreateForm.js","routes/User/Post/components/CreateForm/index.js","routes/User/Post/components/CreateForm/CreateForm.enhancer.js","routes/User/Post/components/PostPage/PostPage.js","routes/User/Post/components/PostPage/PostPage.enhancer.js","routes/User/Post/components/PostPage/index.js","routes/Admin/Post/components/PostItem/PostItem.js","routes/Admin/Post/components/PostItem/index.js","routes/Admin/Post/components/PostItem/PostItem.enhancer.js","routes/Admin/Post/components/PostsPage/PostsPage.js","routes/Admin/Post/components/PostsPage/PostsPage.enhancer.js","routes/Admin/Post/components/PostsPage/index.js","routes/User/Dashboard/components/UploadGuide/index.js","routes/User/Dashboard/components/HistoryTable/index.js","routes/User/Dashboard/components/DashboardPage/index.js","constants/formNames.js","utils/router.js","utils/renderTextInputField.js","utils/renderTextAreaField.js","components/Messages.js"],"names":["Input","TextArea","Wrapper","styled","div","_templateObject","ButtonWrapper","_templateObject2","CreateForm","_ref","submitting","handleSubmit","react_default","a","createElement","onSubmit","Field","name","label","component","renderTextInputField","disabled","renderTextAreaField","es_button","loading","htmlType","type","enhance","compose","reduxForm","form","NEW_POST_FORM_NAME","onSubmitSuccess","result","dispatch","props","reset","PostPage_templateObject","UserIsAuthenticated","connect","uid","firebase","auth","spinnerWhileLoading","firebaseConnect","_ref2","params","path","queryParams","concat","withRouter","withHandlers","addPost","newInstance","push","Object","objectSpread","createdBy","createdAt","database","ServerValue","TIMESTAMP","then","success","catch","err","console","error","message","Promise","reject","PostPage_Wrapper","components_CreateForm","Title","h3","PostItem","title","content","input","value","rows","divider","PostsPage_templateObject","_ref3","posts","ordered","log","PostsPage_Wrapper","map","key","components_PostItem","assign","Meta","Card","Description","GuideImg","img","_templateObject3","UploadGuide","card","cover","alt","src","description","columns","dataIndex","HistoryTable","dataSource","table","locale","emptyText","requestUrl","dummyData","currentData","jaw","eye","lips","histories","DashboardPage_templateObject","DashboardPage","state","pristine","data","uploadStart","base64","axios","post","split","response","_this","setState","handleChange","info","file","status","callback","reader","FileReader","addEventListener","readAsDataURL","getBase64","originFileObj","_this$state","this","initialData","keys","length","reduce","acc","history","index","generateHistoryTableData","DashboardPage_Wrapper","upload","listType","className","showUploadList","action","onChange","icon","React","PureComponent","__webpack_require__","d","__webpack_exports__","ACCOUNT_FORM_NAME","LOGIN_FORM_NAME","SIGNUP_FORM_NAME","UserIsNotAuthenticated","redux_auth_wrapper_history4_redirect__WEBPACK_IMPORTED_MODULE_0__","redux_auth_wrapper_history4_locationHelper__WEBPACK_IMPORTED_MODULE_1__","redux_auth_wrapper_history4_locationHelper__WEBPACK_IMPORTED_MODULE_1___default","n","history_createBrowserHistory__WEBPACK_IMPORTED_MODULE_2__","history_createBrowserHistory__WEBPACK_IMPORTED_MODULE_2___default","components_LoadingSpinner__WEBPACK_IMPORTED_MODULE_3__","constants_paths__WEBPACK_IMPORTED_MODULE_4__","locationHelper","locationHelperBuilder","createHistory","connectedRouterRedirect","redirectPath","AuthenticatingComponent","LoadingSpinner","wrapperDisplayName","authenticatedSelector","isEmpty","authenticatingSelector","_ref2$firebase","isInitializing","isLoaded","redirectAction","newLoc","payload","allowRedirectBack","_ref4","_ref4$firebase","ownProps","email","POST_PATH","getRedirectQueryParam","LIST_PATH","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","antd__WEBPACK_IMPORTED_MODULE_1__","antd__WEBPACK_IMPORTED_MODULE_2__","FormItem","Form","Item","_ref$meta","meta","touched","warning","placeholder","formItemStyle","inputStyle","hasFeedback","labelCol","wrapperCol","defaultHasFeedback","hasButton","undefined","defaultLabelCol","span","defaultWrapperCol","errorProps","warningProps","successProps","validateStatus","help","colon","style","size","antd__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"static/js/Projects.c0495e04.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types'\nimport { Field } from 'redux-form'\nimport { Form, Input, Button } from 'antd';\n\nimport renderTextInputField from 'utils/renderTextInputField';\nimport renderTextAreaField from 'utils/renderTextAreaField';\n\nconst { TextArea } = Input;\n\nconst Wrapper = styled.div`\n  width: 100%;\n  max-width: 1280px;\n\n  padding: 2rem;\n`;\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: row-reverse;\n`;\n\nconst CreateForm = ({ submitting, handleSubmit }) => (\n  <Wrapper>\n    <form onSubmit={handleSubmit}>\n      <div>\n        <Field\n          name=\"title\"\n          label=\"제목\"\n          component={renderTextInputField}\n          disabled={submitting}\n        />\n      </div>\n      <div>\n        <Field\n          name=\"content\"\n          label=\"내용\"\n          component={renderTextAreaField}\n          disabled={submitting}\n        />\n      </div>\n      <ButtonWrapper>\n        <Button loading={submitting} htmlType=\"submit\" type=\"primary\">\n          완료\n        </Button>\n      </ButtonWrapper>\n    </form>\n  </Wrapper>\n)\n\nCreateForm.propTypes = {\n  submitting: PropTypes.bool.isRequired, // from enhancer (reduxForm)\n  handleSubmit: PropTypes.func.isRequired, // from enhancer (reduxForm)\n}\n\nexport default CreateForm;\n","import CreateForm from './CreateForm'\nimport enhance from './CreateForm.enhancer'\n\nexport default enhance(CreateForm);\n","import { compose } from 'recompose';\nimport { reduxForm } from 'redux-form';\nimport { NEW_POST_FORM_NAME } from 'constants/formNames';\n\nexport default compose(\n  reduxForm({\n    form: NEW_POST_FORM_NAME,\n    // Clear the form for future use (creating another project)\n    onSubmitSuccess: (result, dispatch, props) => props.reset(),\n  }),\n);\n","import React, { Fragement } from 'react';\nimport styled from 'styled-components';\nimport { Upload, Icon, message } from 'antd';\nimport axios from 'axios';\n\nimport CreateForm from '../CreateForm';\n\nconst Wrapper = styled.div`\n`;\n\nexport default function PostPage({ addPost }) {\n  return (\n    <Wrapper>\n      <CreateForm onSubmit={addPost} />\n    </Wrapper>\n  );\n}\n","import { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { withHandlers, withStateHandlers } from 'recompose'\nimport { withRouter } from 'react-router-dom'\nimport { firebaseConnect } from 'react-redux-firebase'\nimport { withNotifications } from 'modules/notification'\nimport { spinnerWhileLoading } from 'utils/components'\nimport { UserIsAuthenticated } from 'utils/router'\n\nimport { success, error } from 'components/Messages';\nimport { LIST_PATH } from 'constants/paths'\n\nexport default compose(\n  // redirect to /login if user is not logged in\n  UserIsAuthenticated,\n  // Map auth uid from state to props\n  connect(({ firebase: { auth: { uid } } }) => ({ uid })),\n  // Wait for uid to exist before going further\n  spinnerWhileLoading(['uid']),\n  // Create listeners based on current users UID\n  firebaseConnect(({ params, uid }) => [\n    {\n      path: 'posts',\n      queryParams: ['orderByChild=createdBy', `equalTo=${uid}`]\n    }\n  ]),\n  // Add props.router\n  withRouter,\n  // Add handlers as props\n  withHandlers({\n    addPost: props => newInstance => {\n      const { firebase, uid } = props\n      if (!uid) {\n        return error('로그인이 필요한 작업입니다.');\n      }\n      return firebase\n        .push('posts', {\n          ...newInstance,\n          createdBy: uid,\n          createdAt: firebase.database.ServerValue.TIMESTAMP\n        })\n        .then(() => {\n          success('작성을 성공적으로 마무리했습니다.');\n        })\n        .catch(err => {\n          console.error('Error:', err); // eslint-disable-line no-console\n          error(err.message || '실패.');\n          return Promise.reject(err);\n        })\n    },\n  }),\n)\n","import PostPage from './PostPage'\nimport enhance from './PostPage.enhancer'\n\nexport default enhance(PostPage);\n","import React from 'react'\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types'\nimport { Field } from 'redux-form'\nimport { Form, Input, Button, Divider } from 'antd';\n\nimport renderTextInputField from 'utils/renderTextInputField';\nimport renderTextAreaField from 'utils/renderTextAreaField';\n\nconst { TextArea } = Input;\n\nconst Wrapper = styled.div`\n  width: 100%;\n  max-width: 1280px;\n\n  padding: 2rem;\n`;\n\nconst Title = styled.h3`\n`;\n\nconst PostItem = ({ title, content, createdBy }) => (\n  <Wrapper>\n    <Title>{`작성자: ${createdBy}`}</Title>\n    <Input value={title} disabled={true} />\n    <TextArea rows={8} value={content} disabled={true} />\n    <Divider />\n  </Wrapper>\n)\n\nexport default PostItem;\n","import PostItem from './PostItem'\nimport enhance from './PostItem.enhancer'\n\nexport default enhance(PostItem);\n","import { compose } from 'recompose';\nimport { reduxForm } from 'redux-form';\nimport { NEW_POST_FORM_NAME } from 'constants/formNames';\n\nexport default compose(\n  reduxForm({\n    form: NEW_POST_FORM_NAME,\n    // Clear the form for future use (creating another project)\n    onSubmitSuccess: (result, dispatch, props) => props.reset(),\n  }),\n);\n","import React, { Fragement } from 'react';\nimport styled from 'styled-components';\nimport { Upload, Icon, message } from 'antd';\nimport axios from 'axios';\n\nimport PostItem from '../PostItem';\n\nconst Wrapper = styled.div`\n`;\n\nexport default function PostsPage({ posts }) {\n  console.log(posts);\n  return (\n    <Wrapper>\n      {posts.map(({ key, value }) => <PostItem key={key} {...value} />)}\n    </Wrapper>\n  );\n}\n","import { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { withHandlers, withStateHandlers } from 'recompose'\nimport { withRouter } from 'react-router-dom'\nimport { firebaseConnect } from 'react-redux-firebase'\nimport { withNotifications } from 'modules/notification'\nimport { spinnerWhileLoading } from 'utils/components'\nimport { UserIsAuthenticated } from 'utils/router'\n\nimport { success, error } from 'components/Messages';\n\nexport default compose(\n  // redirect to /login if user is not logged in\n  UserIsAuthenticated,\n  // Map auth uid from state to props\n  connect(({ firebase: { auth: { uid } } }) => ({ uid })),\n  // Wait for uid to exist before going further\n  spinnerWhileLoading(['uid']),\n  // Create listeners based on current users UID\n  firebaseConnect(({ params }) => [\n    {\n      path: 'posts',\n      queryParams: ['orderByChild=createdBy']\n    }\n  ]),\n  // Map posts from state to props\n  connect(({ firebase: { ordered } }) => ({\n    posts: ordered.posts\n  })),\n  // Show loading spinner while posts and collabProjects are loading\n  spinnerWhileLoading(['posts']),\n  // Add props.router\n  withRouter,\n  // Add handlers as props\n  withHandlers({\n    addPost: props => newInstance => {\n      const { firebase, uid } = props\n      if (!uid) {\n        return error('로그인이 필요한 작업입니다.');\n      }\n      return firebase\n        .push('posts', {\n          ...newInstance,\n          createdBy: uid,\n          createdAt: firebase.database.ServerValue.TIMESTAMP\n        })\n        .then(() => {\n          success('작성을 성공적으로 마무리했습니다.');\n        })\n        .catch(err => {\n          console.error('Error:', err); // eslint-disable-line no-console\n          error(err.message || '실패.');\n          return Promise.reject(err);\n        })\n    },\n  }),\n)\n","import PostsPage from './PostsPage'\nimport enhance from './PostsPage.enhancer'\n\nexport default enhance(PostsPage);\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Card, Col, Row } from 'antd';\n\nconst { Meta } = Card;\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: 30px;\n  margin-bottom: 30px;\n\n  background: #ECECEC;\n\n  > div {\n    flex: 1;\n\n    margin: 10px;\n  }\n\n  @media screen and (max-width: 576px) {\n    flex-direction: column;\n\n    > div {\n      margin: 10px;\n    }\n  }\n`;\n\nconst Description = styled.div`\n  word-break: keep-all;\n`;\n\nconst GuideImg = styled.img`\n  width: 100%;\n`;\n\nexport default function UploadGuide() {\n  return (\n    <Wrapper>\n      <Card cover={<GuideImg alt=\"올바른 요청\" src=\"https://jourgo.com/wp-content/uploads/2017/11/ryan-holloway-261284-1-e1545644191309.jpg\" />}>\n        <Meta title=\"올바른 요청 예시\" description={<Description>{'정면을 바라보는 사진이 측정 잘 돼요.'}</Description>} />\n      </Card>\n      <Card cover={<GuideImg alt=\"잘못된 요청1\" src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRYYZfJYQOOMEqURXk-DSYzj1cBQSHDswgUkUD26pd56ri6ANJF\" />}>\n        <Meta title=\"잘못된 요청 예시\" description={<Description>{'얼굴을 알아보기 힘든 사진은 측정이 어려워요.'}</Description>} />\n      </Card>\n      <Card cover={<GuideImg alt=\"잘못된 요청2\" src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRYYZfJYQOOMEqURXk-DSYzj1cBQSHDswgUkUD26pd56ri6ANJF\" />}>\n        <Meta title=\"잘못된 요청 예시\" description={<Description>{'각도가 돌아간 사진은 측정이 어려워요.'}</Description>} />\n      </Card>\n    </Wrapper>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Table } from 'antd';\n\nconst columns = [\n  {\n    title: '턱 대칭률',\n    dataIndex: 'jaw',\n    key: 'jaw',\n  },\n  {\n    title: '눈 대칭률',\n    dataIndex: 'eye',\n    key: 'eye',\n  },\n  {\n    title: '입술 대칭률',\n    dataIndex: 'lips',\n    key: 'lips',\n  },\n];\n\nexport default function HistoryTable({ dataSource, loading }) {\n  return (\n    <Table\n      columns={columns}\n      dataSource={dataSource}\n      loading={loading}\n      locale={{ emptyText: '검사하기를 눌러서 확인해보세요.' }}\n    />\n  );\n}\n","import React, { Fragement } from 'react';\nimport styled from 'styled-components';\nimport { Upload, Icon, message } from 'antd';\nimport axios from 'axios';\n\nimport UploadGuide from '../UploadGuide';\nimport HistoryTable from '../HistoryTable';\n\nconst requestUrl = 'https://skb89qsem5.execute-api.ap-northeast-2.amazonaws.com/dev/test/image';\nconst dummyBase64 = \"\";\n\nconst dummyData = {\n  currentData: {\n    jaw: 9.688786560366793,\n    eye: 2.8912695962205643,\n    lips: 25.463345061871614,\n  },\n  histories: [\n    {\n      jaw: 9.588786560366793,\n      eye: 2.7912695962205643,\n      lips: 23.463345061871614,\n    },\n    {\n      jaw: 9.888786560366793,\n      eye: 2.8732695962205643,\n      lips: 24.463345061871614,\n    },\n  ],\n};\n\nfunction generateHistoryTableData(data) {\n  console.log(\"Data\")\n  console.log(data)\n\n  const initialData = Object.keys(data.currentData).length > 0 ? [{ key: 0, ...data.currentData }] : [];\n\n  return data.histories.reduce((acc, history, index) => {\n    acc.push({\n      key: index + 1,\n      ...history,\n    });\n\n    return acc;\n  }, initialData);\n}\n\n\nfunction getBase64(img, callback) {\n  const reader = new FileReader();\n  reader.addEventListener('load', () => callback(reader.result));\n  reader.readAsDataURL(img);\n}\n\nfunction beforeUpload(file) {\n  /*\n  const isJPG = file.type === 'image/jpeg';\n  if (!isJPG) {\n    message.error('You can only upload JPG file!');\n  }\n  */\n  const isLt2M = file.size / 1024 / 1024 < 2;\n  if (!isLt2M) {\n    message.error('Image must smaller than 2MB!');\n  }\n  return /* isJPG && */ isLt2M;\n}\n\nconst Wrapper = styled.div`\n`;\n\nexport default class DashboardPage extends React.PureComponent {\n  state = {\n    pristine: true,\n    loading: false,\n    error: false,\n    data: {\n      data : {\n        currentData: {},\n        histories: [],\n      },\n    },\n  };\n\n  uploadStart = base64 => {\n    axios.post(requestUrl, {data : `\"${base64.split(',')[1]}\"`})\n      .then(response => {\n        this.setState({\n          loading: false,\n          data: response.data,\n        });\n      })\n      .catch(error => {\n        this.setState({\n          loading: false,\n          error: true,\n          data: dummyData,\n        });\n        console.log(error);\n      });\n  }\n\n  handleChange = (info) => {\n    if (info.file.status === 'uploading') {\n      this.setState({ pristine: false, loading: true, error: false });\n      return;\n    }\n    if (info.file.status === 'done') {\n      // Get this url from response in real world.\n      getBase64(info.file.originFileObj, base64 => this.uploadStart(base64));\n    }\n  }\n\n  render() {\n    const {\n      data,\n      pristine,\n      loading,\n      error,\n    } = this.state;\n\n    const dataSource = generateHistoryTableData(data.data);\n\n    return (\n      <Wrapper>\n        <UploadGuide />\n        <Upload\n          name=\"avatar\"\n          listType=\"picture-card\"\n          className=\"avatar-uploader\"\n          showUploadList={false}\n          action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n          onChange={this.handleChange}\n        >\n          <div>\n            <Icon type={loading ? 'loading' : 'plus'} />\n            <div className=\"ant-upload-text\">검사하기</div>\n          </div>\n        </Upload>\n        <HistoryTable dataSource={dataSource} loading={loading} />\n      </Wrapper>\n    );\n  }\n}\n\n","export const ACCOUNT_FORM_NAME = 'account'\nexport const LOGIN_FORM_NAME = 'login'\nexport const SIGNUP_FORM_NAME = 'signup'\nexport const NEW_PROJECT_FORM_NAME = 'newProject'\nexport const NEW_POST_FORM_NAME = 'newPost'\nexport const NEW_ANSWER_FORM_NAME = 'newAnswer'\n","import { connectedRouterRedirect } from 'redux-auth-wrapper/history4/redirect'\nimport locationHelperBuilder from 'redux-auth-wrapper/history4/locationHelper'\nimport createHistory from 'history/createBrowserHistory'\nimport LoadingSpinner from 'components/LoadingSpinner'\nimport { LIST_PATH, POST_PATH } from 'constants/paths'\n\nconst locationHelper = locationHelperBuilder({})\nconst history = createHistory()\n\nconst AUTHED_REDIRECT = 'AUTHED_REDIRECT'\nconst UNAUTHED_REDIRECT = 'UNAUTHED_REDIRECT'\n\n/**\n * Higher Order Component that redirects to `/login` instead\n * rendering if user is not authenticated (default of redux-auth-wrapper).\n * @param {Component} componentToWrap - Component to wrap\n * @return {Component} wrappedComponent\n */\nexport const UserIsAuthenticated = connectedRouterRedirect({\n  redirectPath: '/login',\n  AuthenticatingComponent: LoadingSpinner,\n  wrapperDisplayName: 'UserIsAuthenticated',\n  // Want to redirect the user when they are done loading and authenticated\n  authenticatedSelector: ({ firebase: { auth } }) =>\n    !auth.isEmpty && !!auth.uid,\n  authenticatingSelector: ({ firebase: { auth, isInitializing } }) =>\n    !auth.isLoaded || isInitializing,\n  redirectAction: newLoc => dispatch => {\n    // Use push, replace, and go to navigate around.\n    history.push(newLoc)\n    dispatch({\n      type: UNAUTHED_REDIRECT,\n      payload: { message: 'User is not authenticated.' }\n    })\n  }\n})\n\n/**\n * Higher Order Component that redirects to listings page or most\n * recent route instead rendering if user is not authenticated. This is useful\n * routes that should not be displayed if a user is logged in, such as the\n * login route.\n * @param {Component} componentToWrap - Component to wrap\n * @return {Component} wrappedComponent\n */\nexport const UserIsNotAuthenticated = connectedRouterRedirect({\n  AuthenticatingComponent: LoadingSpinner,\n  wrapperDisplayName: 'UserIsNotAuthenticated',\n  allowRedirectBack: false,\n  // Want to redirect the user when they are done loading and authenticated\n  authenticatedSelector: ({ firebase: { auth } }) => auth.isEmpty,\n  authenticatingSelector: ({ firebase: { auth, isInitializing } }) =>\n    !auth.isLoaded || isInitializing,\n  redirectPath: (state, ownProps) => {\n    console.log('state');\n    console.log(state);\n    console.log('ownProps');\n    console.log(ownProps);\n\n    const { firebase: { auth: { email } } } = state;\n\n    if (email === 'admin@test.com') {\n      console.log('isAdmin');\n      return POST_PATH;\n    }\n\n    return locationHelper.getRedirectQueryParam(ownProps) || LIST_PATH;\n  },\n  redirectAction: newLoc => dispatch => {\n    // Use push, replace, and go to navigate around.\n    history.push(newLoc)\n    dispatch({\n      type: AUTHED_REDIRECT,\n      payload: { message: 'User is not authenticated.' }\n    })\n  }\n})\n","import React from 'react';\nimport { Form, Input, Button } from 'antd';\n\nconst FormItem = Form.Item;\n\nconst renderTextInputField = ({\n  input,\n  meta: { touched, error, warning },\n  placeholder,\n  label,\n  type,\n  formItemStyle,\n  inputStyle,\n  hasFeedback,\n  labelCol,\n  wrapperCol,\n  disabled,\n  hasButton,\n}) => {\n  const defaultHasFeedback = hasFeedback === undefined ? true : hasFeedback;\n  const defaultLabelCol = !labelCol ? { span: 4 } : labelCol;\n  const defaultWrapperCol = !wrapperCol ? { span: 20 } : wrapperCol;\n  let errorProps = null;\n  let warningProps = null;\n  let successProps = null;\n\n  if (touched) {\n    if (error) {\n      errorProps = {\n        validateStatus: 'error',\n        help: error,\n      };\n    }\n\n    if (warning) {\n      warningProps = {\n        validateStatus: 'warning',\n        help: warning,\n      };\n    }\n\n    if (!error && !warning && input.value) {\n      successProps = {\n        validateStatus: 'success',\n      };\n    }\n  }\n\n  return (\n    <FormItem\n      labelCol={defaultLabelCol}\n      wrapperCol={defaultWrapperCol}\n      colon={false}\n      label={label}\n      hasFeedback={defaultHasFeedback}\n      style={formItemStyle}\n      {...errorProps || warningProps || successProps}\n    >\n      <Input\n        size=\"large\"\n        style={inputStyle}\n        type={type}\n        {...input}\n        placeholder={placeholder}\n        disabled={disabled}\n      />\n    </FormItem>\n  );\n};\n\nexport default renderTextInputField;\n","import React from 'react';\nimport { Form, Input, Button } from 'antd';\n\nconst { TextArea } = Input;\nconst FormItem = Form.Item;\n\nconst renderTextAreaField = ({\n  input,\n  meta: { touched, error, warning },\n  placeholder,\n  label,\n  type,\n  formItemStyle,\n  inputStyle,\n  hasFeedback,\n  labelCol,\n  wrapperCol,\n  disabled,\n  hasButton,\n}) => {\n  const defaultHasFeedback = hasFeedback === undefined ? true : hasFeedback;\n  const defaultLabelCol = !labelCol ? { span: 4 } : labelCol;\n  const defaultWrapperCol = !wrapperCol ? { span: 20 } : wrapperCol;\n  let errorProps = null;\n  let warningProps = null;\n  let successProps = null;\n\n  if (touched) {\n    if (error) {\n      errorProps = {\n        validateStatus: 'error',\n        help: error,\n      };\n    }\n\n    if (warning) {\n      warningProps = {\n        validateStatus: 'warning',\n        help: warning,\n      };\n    }\n\n    if (!error && !warning && input.value) {\n      successProps = {\n        validateStatus: 'success',\n      };\n    }\n  }\n\n  return (\n    <FormItem\n      labelCol={defaultLabelCol}\n      wrapperCol={defaultWrapperCol}\n      colon={false}\n      label={label}\n      hasFeedback={defaultHasFeedback}\n      style={formItemStyle}\n      {...errorProps || warningProps || successProps}\n    >\n      <TextArea\n        size=\"large\"\n        rows={8}\n        style={inputStyle}\n        type={type}\n        {...input}\n        placeholder={placeholder}\n        disabled={disabled}\n      />\n    </FormItem>\n  );\n};\n\nexport default renderTextAreaField;\n","import { message } from 'antd';\n\nexport const success = content => {\n  message.success(content);\n};\n\nexport const error = content => {\n  message.error(content);\n};\n\nexport const warning = content => {\n  message.warning(content);\n};\n"],"sourceRoot":""}