{"ast":null,"code":"import { withFirebase } from 'react-redux-firebase';\nimport { withHandlers, compose } from 'recompose';\nimport { UserIsNotAuthenticated } from 'utils/router';\nimport { withNotifications } from 'modules/notification';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './SignupPage.styles';\nexport default compose( // Redirect to list page if logged in\nUserIsNotAuthenticated, // Add props.showError\nwithNotifications, // Add props.firebase (used in handlers)\nwithFirebase, // Add handlers as props\nwithHandlers({\n  onSubmitFail: function onSubmitFail(props) {\n    return function (formErrs, dispatch, err) {\n      return props.showError(formErrs ? 'Form Invalid' : err.message || 'Error');\n    };\n  },\n  googleLogin: function googleLogin(_ref) {\n    var firebase = _ref.firebase,\n        showError = _ref.showError;\n    return function (e) {\n      return firebase.login({\n        provider: 'google',\n        type: 'popup'\n      }).catch(function (err) {\n        return showError(err.message);\n      });\n    };\n  },\n  emailSignup: function emailSignup(_ref2) {\n    var firebase = _ref2.firebase,\n        showError = _ref2.showError;\n    return function (creds) {\n      return firebase.createUser(creds, {\n        email: creds.email,\n        username: creds.username\n      }).catch(function (err) {\n        return showError(err.message);\n      });\n    };\n  }\n}), // Add styles as props.classes\nwithStyles(styles));","map":{"version":3,"sources":["/home/seungmin/face-web/src/routes/Signup/components/SignupPage/SignupPage.enhancer.js"],"names":["withFirebase","withHandlers","compose","UserIsNotAuthenticated","withNotifications","withStyles","styles","onSubmitFail","props","formErrs","dispatch","err","showError","message","googleLogin","firebase","e","login","provider","type","catch","emailSignup","creds","createUser","email","username"],"mappings":"AAAA,SAASA,YAAT,QAA6B,sBAA7B;AACA,SAASC,YAAT,EAAuBC,OAAvB,QAAsC,WAAtC;AACA,SAASC,sBAAT,QAAuC,cAAvC;AACA,SAASC,iBAAT,QAAkC,sBAAlC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,eAAeJ,OAAO,EACpB;AACAC,sBAFoB,EAGpB;AACAC,iBAJoB,EAKpB;AACAJ,YANoB,EAOpB;AACAC,YAAY,CAAC;AACXM,EAAAA,YAAY,EAAE,sBAAAC,KAAK;AAAA,WAAI,UAACC,QAAD,EAAWC,QAAX,EAAqBC,GAArB;AAAA,aACrBH,KAAK,CAACI,SAAN,CAAgBH,QAAQ,GAAG,cAAH,GAAoBE,GAAG,CAACE,OAAJ,IAAe,OAA3D,CADqB;AAAA,KAAJ;AAAA,GADR;AAGXC,EAAAA,WAAW,EAAE;AAAA,QAAGC,QAAH,QAAGA,QAAH;AAAA,QAAaH,SAAb,QAAaA,SAAb;AAAA,WAA6B,UAAAI,CAAC;AAAA,aACzCD,QAAQ,CACLE,KADH,CACS;AAAEC,QAAAA,QAAQ,EAAE,QAAZ;AAAsBC,QAAAA,IAAI,EAAE;AAA5B,OADT,EAEGC,KAFH,CAES,UAAAT,GAAG;AAAA,eAAIC,SAAS,CAACD,GAAG,CAACE,OAAL,CAAb;AAAA,OAFZ,CADyC;AAAA,KAA9B;AAAA,GAHF;AAOXQ,EAAAA,WAAW,EAAE;AAAA,QAAGN,QAAH,SAAGA,QAAH;AAAA,QAAaH,SAAb,SAAaA,SAAb;AAAA,WAA6B,UAAAU,KAAK;AAAA,aAC7CP,QAAQ,CACLQ,UADH,CACcD,KADd,EACqB;AACjBE,QAAAA,KAAK,EAAEF,KAAK,CAACE,KADI;AAEjBC,QAAAA,QAAQ,EAAEH,KAAK,CAACG;AAFC,OADrB,EAKGL,KALH,CAKS,UAAAT,GAAG;AAAA,eAAIC,SAAS,CAACD,GAAG,CAACE,OAAL,CAAb;AAAA,OALZ,CAD6C;AAAA,KAAlC;AAAA;AAPF,CAAD,CARQ,EAuBpB;AACAR,UAAU,CAACC,MAAD,CAxBU,CAAtB","sourcesContent":["import { withFirebase } from 'react-redux-firebase'\nimport { withHandlers, compose } from 'recompose'\nimport { UserIsNotAuthenticated } from 'utils/router'\nimport { withNotifications } from 'modules/notification'\nimport { withStyles } from '@material-ui/core/styles'\nimport styles from './SignupPage.styles'\n\nexport default compose(\n  // Redirect to list page if logged in\n  UserIsNotAuthenticated,\n  // Add props.showError\n  withNotifications,\n  // Add props.firebase (used in handlers)\n  withFirebase,\n  // Add handlers as props\n  withHandlers({\n    onSubmitFail: props => (formErrs, dispatch, err) =>\n      props.showError(formErrs ? 'Form Invalid' : err.message || 'Error'),\n    googleLogin: ({ firebase, showError }) => e =>\n      firebase\n        .login({ provider: 'google', type: 'popup' })\n        .catch(err => showError(err.message)),\n    emailSignup: ({ firebase, showError }) => creds =>\n      firebase\n        .createUser(creds, {\n          email: creds.email,\n          username: creds.username\n        })\n        .catch(err => showError(err.message))\n  }),\n  // Add styles as props.classes\n  withStyles(styles)\n)\n"]},"metadata":{},"sourceType":"module"}