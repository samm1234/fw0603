{"ast":null,"code":"import { connect } from 'react-redux';\nimport { withHandlers, compose, withProps, flattenProp, withStateHandlers } from 'recompose';\nimport { withStyles } from '@material-ui/core/styles';\nimport { withRouter } from 'react-router-dom';\nimport { withFirebase, isEmpty, isLoaded } from 'react-redux-firebase';\nimport { ACCOUNT_PATH } from 'constants/paths';\nimport styles from './Navbar.styles';\nexport default compose( // Map redux state to props\nconnect(function (_ref) {\n  var _ref$firebase = _ref.firebase,\n      auth = _ref$firebase.auth,\n      profile = _ref$firebase.profile;\n  return {\n    auth: auth,\n    profile: profile\n  };\n}), // State handlers as props\nwithStateHandlers(function (_ref2) {\n  var _ref2$accountMenuOpen = _ref2.accountMenuOpenInitially,\n      accountMenuOpenInitially = _ref2$accountMenuOpen === void 0 ? false : _ref2$accountMenuOpen;\n  return {\n    accountMenuOpen: accountMenuOpenInitially,\n    anchorEl: null\n  };\n}, {\n  closeAccountMenu: function closeAccountMenu(_ref3) {\n    var accountMenuOpen = _ref3.accountMenuOpen;\n    return function () {\n      return {\n        anchorEl: null\n      };\n    };\n  },\n  handleMenu: function handleMenu() {\n    return function (event) {\n      return {\n        anchorEl: event.target\n      };\n    };\n  }\n}), // Add props.router (used in handlers)\nwithRouter, // Add props.firebase (used in handlers)\nwithFirebase, // Handlers as props\nwithHandlers({\n  handleLogout: function handleLogout(props) {\n    return function () {\n      props.firebase.logout();\n      props.history.push('/');\n      props.closeAccountMenu();\n    };\n  },\n  goToAccount: function goToAccount(props) {\n    return function () {\n      props.history.push(ACCOUNT_PATH);\n      props.closeAccountMenu();\n    };\n  }\n}), // Add custom props\nwithProps(function (_ref4) {\n  var auth = _ref4.auth,\n      profile = _ref4.profile;\n  return {\n    authExists: isLoaded(auth) && !isEmpty(auth)\n  };\n}), // Flatten profile so that avatarUrl and displayName are props\nflattenProp('profile'), // Add styles as classes prop\nwithStyles(styles));","map":{"version":3,"sources":["/home/seungmin/face-web/src/containers/Navbar/Navbar.enhancer.js"],"names":["connect","withHandlers","compose","withProps","flattenProp","withStateHandlers","withStyles","withRouter","withFirebase","isEmpty","isLoaded","ACCOUNT_PATH","styles","firebase","auth","profile","accountMenuOpenInitially","accountMenuOpen","anchorEl","closeAccountMenu","handleMenu","event","target","handleLogout","props","logout","history","push","goToAccount","authExists"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SACEC,YADF,EAEEC,OAFF,EAGEC,SAHF,EAIEC,WAJF,EAKEC,iBALF,QAMO,WANP;AAOA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,YAAT,EAAuBC,OAAvB,EAAgCC,QAAhC,QAAgD,sBAAhD;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,eAAeV,OAAO,EACpB;AACAF,OAAO,CAAC;AAAA,2BAAGa,QAAH;AAAA,MAAeC,IAAf,iBAAeA,IAAf;AAAA,MAAqBC,OAArB,iBAAqBA,OAArB;AAAA,SAAsC;AAC5CD,IAAAA,IAAI,EAAJA,IAD4C;AAE5CC,IAAAA,OAAO,EAAPA;AAF4C,GAAtC;AAAA,CAAD,CAFa,EAMpB;AACAV,iBAAiB,CACf;AAAA,oCAAGW,wBAAH;AAAA,MAAGA,wBAAH,sCAA8B,KAA9B;AAAA,SAA2C;AACzCC,IAAAA,eAAe,EAAED,wBADwB;AAEzCE,IAAAA,QAAQ,EAAE;AAF+B,GAA3C;AAAA,CADe,EAKf;AACEC,EAAAA,gBAAgB,EAAE;AAAA,QAAGF,eAAH,SAAGA,eAAH;AAAA,WAAyB;AAAA,aAAO;AAChDC,QAAAA,QAAQ,EAAE;AADsC,OAAP;AAAA,KAAzB;AAAA,GADpB;AAIEE,EAAAA,UAAU,EAAE;AAAA,WAAM,UAAAC,KAAK;AAAA,aAAK;AAC1BH,QAAAA,QAAQ,EAAEG,KAAK,CAACC;AADU,OAAL;AAAA,KAAX;AAAA;AAJd,CALe,CAPG,EAqBpB;AACAf,UAtBoB,EAuBpB;AACAC,YAxBoB,EAyBpB;AACAP,YAAY,CAAC;AACXsB,EAAAA,YAAY,EAAE,sBAAAC,KAAK;AAAA,WAAI,YAAM;AAC3BA,MAAAA,KAAK,CAACX,QAAN,CAAeY,MAAf;AACAD,MAAAA,KAAK,CAACE,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACAH,MAAAA,KAAK,CAACL,gBAAN;AACD,KAJkB;AAAA,GADR;AAMXS,EAAAA,WAAW,EAAE,qBAAAJ,KAAK;AAAA,WAAI,YAAM;AAC1BA,MAAAA,KAAK,CAACE,OAAN,CAAcC,IAAd,CAAmBhB,YAAnB;AACAa,MAAAA,KAAK,CAACL,gBAAN;AACD,KAHiB;AAAA;AANP,CAAD,CA1BQ,EAqCpB;AACAhB,SAAS,CAAC;AAAA,MAAGW,IAAH,SAAGA,IAAH;AAAA,MAASC,OAAT,SAASA,OAAT;AAAA,SAAwB;AAChCc,IAAAA,UAAU,EAAEnB,QAAQ,CAACI,IAAD,CAAR,IAAkB,CAACL,OAAO,CAACK,IAAD;AADN,GAAxB;AAAA,CAAD,CAtCW,EAyCpB;AACAV,WAAW,CAAC,SAAD,CA1CS,EA2CpB;AACAE,UAAU,CAACM,MAAD,CA5CU,CAAtB","sourcesContent":["import { connect } from 'react-redux'\nimport {\n  withHandlers,\n  compose,\n  withProps,\n  flattenProp,\n  withStateHandlers\n} from 'recompose'\nimport { withStyles } from '@material-ui/core/styles'\nimport { withRouter } from 'react-router-dom'\nimport { withFirebase, isEmpty, isLoaded } from 'react-redux-firebase'\nimport { ACCOUNT_PATH } from 'constants/paths'\nimport styles from './Navbar.styles'\n\nexport default compose(\n  // Map redux state to props\n  connect(({ firebase: { auth, profile } }) => ({\n    auth,\n    profile\n  })),\n  // State handlers as props\n  withStateHandlers(\n    ({ accountMenuOpenInitially = false }) => ({\n      accountMenuOpen: accountMenuOpenInitially,\n      anchorEl: null\n    }),\n    {\n      closeAccountMenu: ({ accountMenuOpen }) => () => ({\n        anchorEl: null\n      }),\n      handleMenu: () => event => ({\n        anchorEl: event.target\n      })\n    }\n  ),\n  // Add props.router (used in handlers)\n  withRouter,\n  // Add props.firebase (used in handlers)\n  withFirebase,\n  // Handlers as props\n  withHandlers({\n    handleLogout: props => () => {\n      props.firebase.logout()\n      props.history.push('/')\n      props.closeAccountMenu()\n    },\n    goToAccount: props => () => {\n      props.history.push(ACCOUNT_PATH)\n      props.closeAccountMenu()\n    }\n  }),\n  // Add custom props\n  withProps(({ auth, profile }) => ({\n    authExists: isLoaded(auth) && !isEmpty(auth)\n  })),\n  // Flatten profile so that avatarUrl and displayName are props\n  flattenProp('profile'),\n  // Add styles as classes prop\n  withStyles(styles)\n)\n"]},"metadata":{},"sourceType":"module"}