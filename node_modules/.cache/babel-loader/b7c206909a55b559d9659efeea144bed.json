{"ast":null,"code":"import PropTypes from 'prop-types';\nimport { withHandlers, compose, setPropTypes } from 'recompose';\nimport { withFirebase } from 'react-redux-firebase';\nimport { withStyles } from '@material-ui/core/styles';\nimport { withNotifications } from 'modules/notification';\nimport { UserIsNotAuthenticated } from 'utils/router';\nimport styles from './LoginPage.styles';\nexport default compose( // redirect to /projects if user is already authed\nUserIsNotAuthenticated, // add props.showError\nwithNotifications, // add props.firebase\nwithFirebase, // set proptypes used in HOCs\nsetPropTypes({\n  showError: PropTypes.func.isRequired,\n  // used in handlers\n  firebase: PropTypes.shape({\n    login: PropTypes.func.isRequired // used in handlers\n\n  })\n}), // Handlers as props\nwithHandlers({\n  onSubmitFail: function onSubmitFail(props) {\n    return function (formErrs, dispatch, err) {\n      return props.showError(formErrs ? 'Form Invalid' : err.message || 'Error');\n    };\n  },\n  googleLogin: function googleLogin(_ref) {\n    var firebase = _ref.firebase,\n        showError = _ref.showError,\n        router = _ref.router;\n    return function (event) {\n      return firebase.login({\n        provider: 'google',\n        type: 'popup'\n      }).catch(function (err) {\n        return showError(err.message);\n      });\n    };\n  },\n  emailLogin: function emailLogin(_ref2) {\n    var firebase = _ref2.firebase,\n        router = _ref2.router,\n        showError = _ref2.showError;\n    return function (creds) {\n      return firebase.login(creds).catch(function (err) {\n        return showError(err.message);\n      });\n    };\n  }\n}), // add props.classes\nwithStyles(styles, {\n  withTheme: true\n}));","map":{"version":3,"sources":["/home/seungmin/face-web/src/routes/Login/components/LoginPage/LoginPage.enhancer.js"],"names":["PropTypes","withHandlers","compose","setPropTypes","withFirebase","withStyles","withNotifications","UserIsNotAuthenticated","styles","showError","func","isRequired","firebase","shape","login","onSubmitFail","props","formErrs","dispatch","err","message","googleLogin","router","event","provider","type","catch","emailLogin","creds","withTheme"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,YAAT,EAAuBC,OAAvB,EAAgCC,YAAhC,QAAoD,WAApD;AACA,SAASC,YAAT,QAA6B,sBAA7B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,iBAAT,QAAkC,sBAAlC;AACA,SAASC,sBAAT,QAAuC,cAAvC;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AAEA,eAAeN,OAAO,EACpB;AACAK,sBAFoB,EAGpB;AACAD,iBAJoB,EAKpB;AACAF,YANoB,EAOpB;AACAD,YAAY,CAAC;AACXM,EAAAA,SAAS,EAAET,SAAS,CAACU,IAAV,CAAeC,UADf;AAC2B;AACtCC,EAAAA,QAAQ,EAAEZ,SAAS,CAACa,KAAV,CAAgB;AACxBC,IAAAA,KAAK,EAAEd,SAAS,CAACU,IAAV,CAAeC,UADE,CACS;;AADT,GAAhB;AAFC,CAAD,CARQ,EAcpB;AACAV,YAAY,CAAC;AACXc,EAAAA,YAAY,EAAE,sBAAAC,KAAK;AAAA,WAAI,UAACC,QAAD,EAAWC,QAAX,EAAqBC,GAArB;AAAA,aACrBH,KAAK,CAACP,SAAN,CAAgBQ,QAAQ,GAAG,cAAH,GAAoBE,GAAG,CAACC,OAAJ,IAAe,OAA3D,CADqB;AAAA,KAAJ;AAAA,GADR;AAGXC,EAAAA,WAAW,EAAE;AAAA,QAAGT,QAAH,QAAGA,QAAH;AAAA,QAAaH,SAAb,QAAaA,SAAb;AAAA,QAAwBa,MAAxB,QAAwBA,MAAxB;AAAA,WAAqC,UAAAC,KAAK;AAAA,aACrDX,QAAQ,CACLE,KADH,CACS;AAAEU,QAAAA,QAAQ,EAAE,QAAZ;AAAsBC,QAAAA,IAAI,EAAE;AAA5B,OADT,EAEGC,KAFH,CAES,UAAAP,GAAG;AAAA,eAAIV,SAAS,CAACU,GAAG,CAACC,OAAL,CAAb;AAAA,OAFZ,CADqD;AAAA,KAA1C;AAAA,GAHF;AAOXO,EAAAA,UAAU,EAAE;AAAA,QAAGf,QAAH,SAAGA,QAAH;AAAA,QAAaU,MAAb,SAAaA,MAAb;AAAA,QAAqBb,SAArB,SAAqBA,SAArB;AAAA,WAAqC,UAAAmB,KAAK;AAAA,aACpDhB,QAAQ,CAACE,KAAT,CAAec,KAAf,EAAsBF,KAAtB,CAA4B,UAAAP,GAAG;AAAA,eAAIV,SAAS,CAACU,GAAG,CAACC,OAAL,CAAb;AAAA,OAA/B,CADoD;AAAA,KAA1C;AAAA;AAPD,CAAD,CAfQ,EAyBpB;AACAf,UAAU,CAACG,MAAD,EAAS;AAAEqB,EAAAA,SAAS,EAAE;AAAb,CAAT,CA1BU,CAAtB","sourcesContent":["import PropTypes from 'prop-types'\nimport { withHandlers, compose, setPropTypes } from 'recompose'\nimport { withFirebase } from 'react-redux-firebase'\nimport { withStyles } from '@material-ui/core/styles'\nimport { withNotifications } from 'modules/notification'\nimport { UserIsNotAuthenticated } from 'utils/router'\nimport styles from './LoginPage.styles'\n\nexport default compose(\n  // redirect to /projects if user is already authed\n  UserIsNotAuthenticated,\n  // add props.showError\n  withNotifications,\n  // add props.firebase\n  withFirebase,\n  // set proptypes used in HOCs\n  setPropTypes({\n    showError: PropTypes.func.isRequired, // used in handlers\n    firebase: PropTypes.shape({\n      login: PropTypes.func.isRequired // used in handlers\n    })\n  }),\n  // Handlers as props\n  withHandlers({\n    onSubmitFail: props => (formErrs, dispatch, err) =>\n      props.showError(formErrs ? 'Form Invalid' : err.message || 'Error'),\n    googleLogin: ({ firebase, showError, router }) => event =>\n      firebase\n        .login({ provider: 'google', type: 'popup' })\n        .catch(err => showError(err.message)),\n    emailLogin: ({ firebase, router, showError }) => creds =>\n      firebase.login(creds).catch(err => showError(err.message))\n  }),\n  // add props.classes\n  withStyles(styles, { withTheme: true })\n)\n"]},"metadata":{},"sourceType":"module"}