{"ast":null,"code":"import _defineProperty from \"/home/seungmin/face-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/seungmin/face-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/home/seungmin/face-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { combineReducers } from 'redux';\nimport { without, omit } from 'lodash';\nimport { NOTIFICATION_SHOW, NOTIFICATION_DISMISS } from './actionTypes';\n\nvar notification = function notification() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case NOTIFICATION_SHOW:\n      return action.payload;\n\n    case NOTIFICATION_DISMISS:\n      return undefined;\n\n    default:\n      return state;\n  }\n};\n\nvar allIds = function allIds() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case NOTIFICATION_SHOW:\n      return [].concat(_toConsumableArray(state), [action.payload.id]);\n\n    case NOTIFICATION_DISMISS:\n      return without(state, action.payload);\n\n    default:\n      return state;\n  }\n};\n\nvar byId = function byId() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case NOTIFICATION_SHOW:\n      return _objectSpread({}, state, _defineProperty({}, action.payload.id, notification(state[action.payload.id], action)));\n\n    case NOTIFICATION_DISMISS:\n      return omit(state, action.payload);\n\n    default:\n      return state;\n  }\n};\n\nexport var notifications = combineReducers({\n  byId: byId,\n  allIds: allIds\n});\nexport default notifications;","map":{"version":3,"sources":["/home/seungmin/face-web/src/modules/notification/reducer.js"],"names":["combineReducers","without","omit","NOTIFICATION_SHOW","NOTIFICATION_DISMISS","notification","state","action","type","payload","undefined","allIds","id","byId","notifications"],"mappings":";;;AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,OAAT,EAAkBC,IAAlB,QAA8B,QAA9B;AACA,SAASC,iBAAT,EAA4BC,oBAA5B,QAAwD,eAAxD;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,iBAAL;AACE,aAAOI,MAAM,CAACE,OAAd;;AACF,SAAKL,oBAAL;AACE,aAAOM,SAAP;;AACF;AACE,aAAOJ,KAAP;AANJ;AAQD,CATD;;AAWA,IAAMK,MAAM,GAAG,SAATA,MAAS,GAAwB;AAAA,MAAvBL,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACrC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,iBAAL;AACE,0CAAWG,KAAX,IAAkBC,MAAM,CAACE,OAAP,CAAeG,EAAjC;;AACF,SAAKR,oBAAL;AACE,aAAOH,OAAO,CAACK,KAAD,EAAQC,MAAM,CAACE,OAAf,CAAd;;AACF;AACE,aAAOH,KAAP;AANJ;AAQD,CATD;;AAWA,IAAMO,IAAI,GAAG,SAAPA,IAAO,GAAwB;AAAA,MAAvBP,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACnC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,iBAAL;AACE,+BACKG,KADL,sBAEGC,MAAM,CAACE,OAAP,CAAeG,EAFlB,EAEuBP,YAAY,CAACC,KAAK,CAACC,MAAM,CAACE,OAAP,CAAeG,EAAhB,CAAN,EAA2BL,MAA3B,CAFnC;;AAIF,SAAKH,oBAAL;AACE,aAAOF,IAAI,CAACI,KAAD,EAAQC,MAAM,CAACE,OAAf,CAAX;;AACF;AACE,aAAOH,KAAP;AATJ;AAWD,CAZD;;AAcA,OAAO,IAAMQ,aAAa,GAAGd,eAAe,CAAC;AAAEa,EAAAA,IAAI,EAAJA,IAAF;AAAQF,EAAAA,MAAM,EAANA;AAAR,CAAD,CAArC;AAEP,eAAeG,aAAf","sourcesContent":["import { combineReducers } from 'redux'\nimport { without, omit } from 'lodash'\nimport { NOTIFICATION_SHOW, NOTIFICATION_DISMISS } from './actionTypes'\n\nconst notification = (state = {}, action) => {\n  switch (action.type) {\n    case NOTIFICATION_SHOW:\n      return action.payload\n    case NOTIFICATION_DISMISS:\n      return undefined\n    default:\n      return state\n  }\n}\n\nconst allIds = (state = [], action) => {\n  switch (action.type) {\n    case NOTIFICATION_SHOW:\n      return [...state, action.payload.id]\n    case NOTIFICATION_DISMISS:\n      return without(state, action.payload)\n    default:\n      return state\n  }\n}\n\nconst byId = (state = {}, action) => {\n  switch (action.type) {\n    case NOTIFICATION_SHOW:\n      return {\n        ...state,\n        [action.payload.id]: notification(state[action.payload.id], action)\n      }\n    case NOTIFICATION_DISMISS:\n      return omit(state, action.payload)\n    default:\n      return state\n  }\n}\n\nexport const notifications = combineReducers({ byId, allIds })\n\nexport default notifications\n"]},"metadata":{},"sourceType":"module"}