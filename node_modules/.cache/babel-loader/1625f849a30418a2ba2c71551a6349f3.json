{"ast":null,"code":"import PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport { withFirebase } from 'react-redux-firebase';\nimport { withHandlers, compose, setPropTypes } from 'recompose';\nimport { spinnerWhileLoading } from 'utils/components';\nimport { withNotifications } from 'modules/notification';\nimport { UserIsAuthenticated } from 'utils/router';\nimport styles from './AccountPage.styles';\nexport default compose(UserIsAuthenticated, // redirect to /login if user is not authenticated\nwithFirebase, withNotifications, connect(function (_ref) {\n  var profile = _ref.firebase.profile;\n  return {\n    profile: profile,\n    avatarUrl: profile.avatarUrl\n  };\n}), spinnerWhileLoading(['profile']), setPropTypes({\n  showSuccess: PropTypes.func.isRequired,\n  showError: PropTypes.func.isRequired,\n  firebase: PropTypes.shape({\n    updateProfile: PropTypes.func.isRequired\n  })\n}), withHandlers({\n  updateAccount: function updateAccount(_ref2) {\n    var firebase = _ref2.firebase,\n        showSuccess = _ref2.showSuccess,\n        showError = _ref2.showError;\n    return function (newAccount) {\n      return firebase.updateProfile(newAccount).then(function () {\n        return showSuccess('Profile updated successfully');\n      }).catch(function (error) {\n        showError('Error updating profile: ', error.message || error);\n        console.error('Error updating profile', error.message || error); // eslint-disable-line no-console\n\n        return Promise.reject(error);\n      });\n    };\n  }\n}), // add props.classes\nwithStyles(styles));","map":{"version":3,"sources":["/home/seungmin/face-web/src/routes/Account/components/AccountPage/AccountPage.enhancer.js"],"names":["PropTypes","withStyles","connect","withFirebase","withHandlers","compose","setPropTypes","spinnerWhileLoading","withNotifications","UserIsAuthenticated","styles","profile","firebase","avatarUrl","showSuccess","func","isRequired","showError","shape","updateProfile","updateAccount","newAccount","then","catch","error","message","console","Promise","reject"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,sBAA7B;AACA,SAASC,YAAT,EAAuBC,OAAvB,EAAgCC,YAAhC,QAAoD,WAApD;AACA,SAASC,mBAAT,QAAoC,kBAApC;AACA,SAASC,iBAAT,QAAkC,sBAAlC;AACA,SAASC,mBAAT,QAAoC,cAApC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,eAAeL,OAAO,CACpBI,mBADoB,EACC;AACrBN,YAFoB,EAGpBK,iBAHoB,EAIpBN,OAAO,CAAC;AAAA,MAAeS,OAAf,QAAGC,QAAH,CAAeD,OAAf;AAAA,SAAgC;AACtCA,IAAAA,OAAO,EAAPA,OADsC;AAEtCE,IAAAA,SAAS,EAAEF,OAAO,CAACE;AAFmB,GAAhC;AAAA,CAAD,CAJa,EAQpBN,mBAAmB,CAAC,CAAC,SAAD,CAAD,CARC,EASpBD,YAAY,CAAC;AACXQ,EAAAA,WAAW,EAAEd,SAAS,CAACe,IAAV,CAAeC,UADjB;AAEXC,EAAAA,SAAS,EAAEjB,SAAS,CAACe,IAAV,CAAeC,UAFf;AAGXJ,EAAAA,QAAQ,EAAEZ,SAAS,CAACkB,KAAV,CAAgB;AACxBC,IAAAA,aAAa,EAAEnB,SAAS,CAACe,IAAV,CAAeC;AADN,GAAhB;AAHC,CAAD,CATQ,EAgBpBZ,YAAY,CAAC;AACXgB,EAAAA,aAAa,EAAE;AAAA,QAAGR,QAAH,SAAGA,QAAH;AAAA,QAAaE,WAAb,SAAaA,WAAb;AAAA,QAA0BG,SAA1B,SAA0BA,SAA1B;AAAA,WAA0C,UAAAI,UAAU;AAAA,aACjET,QAAQ,CACLO,aADH,CACiBE,UADjB,EAEGC,IAFH,CAEQ;AAAA,eAAMR,WAAW,CAAC,8BAAD,CAAjB;AAAA,OAFR,EAGGS,KAHH,CAGS,UAAAC,KAAK,EAAI;AACdP,QAAAA,SAAS,CAAC,0BAAD,EAA6BO,KAAK,CAACC,OAAN,IAAiBD,KAA9C,CAAT;AACAE,QAAAA,OAAO,CAACF,KAAR,CAAc,wBAAd,EAAwCA,KAAK,CAACC,OAAN,IAAiBD,KAAzD,EAFc,CAEkD;;AAChE,eAAOG,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACD,OAPH,CADiE;AAAA,KAApD;AAAA;AADJ,CAAD,CAhBQ,EA2BpB;AACAvB,UAAU,CAACS,MAAD,CA5BU,CAAtB","sourcesContent":["import PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport { connect } from 'react-redux'\nimport { withFirebase } from 'react-redux-firebase'\nimport { withHandlers, compose, setPropTypes } from 'recompose'\nimport { spinnerWhileLoading } from 'utils/components'\nimport { withNotifications } from 'modules/notification'\nimport { UserIsAuthenticated } from 'utils/router'\nimport styles from './AccountPage.styles'\n\nexport default compose(\n  UserIsAuthenticated, // redirect to /login if user is not authenticated\n  withFirebase,\n  withNotifications,\n  connect(({ firebase: { profile } }) => ({\n    profile,\n    avatarUrl: profile.avatarUrl\n  })),\n  spinnerWhileLoading(['profile']),\n  setPropTypes({\n    showSuccess: PropTypes.func.isRequired,\n    showError: PropTypes.func.isRequired,\n    firebase: PropTypes.shape({\n      updateProfile: PropTypes.func.isRequired\n    })\n  }),\n  withHandlers({\n    updateAccount: ({ firebase, showSuccess, showError }) => newAccount =>\n      firebase\n        .updateProfile(newAccount)\n        .then(() => showSuccess('Profile updated successfully'))\n        .catch(error => {\n          showError('Error updating profile: ', error.message || error)\n          console.error('Error updating profile', error.message || error) // eslint-disable-line no-console\n          return Promise.reject(error)\n        })\n  }),\n  // add props.classes\n  withStyles(styles)\n)\n"]},"metadata":{},"sourceType":"module"}