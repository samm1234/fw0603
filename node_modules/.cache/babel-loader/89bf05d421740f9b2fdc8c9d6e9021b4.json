{"ast":null,"code":"import _objectWithoutProperties from \"/home/seungmin/face-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _taggedTemplateLiteral from \"/home/seungmin/face-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/seungmin/face-web/src/containers/Navbar/Navbar.js\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  display: block;\\n\\n  width: 100%;\\n\\n  text-decoration: none;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  margin-top: 3rem;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { Layout, Menu, Icon, Spin } from 'antd';\nimport { LIST_PATH } from 'constants/paths';\nimport MenuLink from 'components/MenuLink';\nimport Logo from './Logo';\nimport AccountMenu from './AccountMenu';\nimport LoginMenu from './LoginMenu';\nvar Header = Layout.Header,\n    Content = Layout.Content,\n    Footer = Layout.Footer,\n    Sider = Layout.Sider;\nvar NavFooter = styled.div(_templateObject());\nvar StyledLink = styled(Link)(_templateObject2());\nvar userMenu = [{\n  icon: 'radar-chart',\n  to: '/user/dashboard',\n  label: '측정하기'\n}, {\n  icon: 'edit',\n  to: '/user/form',\n  label: '질문하기'\n}, {\n  icon: 'edit',\n  to: '/user/form',\n  label: '상품후기게시판'\n}, {\n  icon: 'edit',\n  to: '/user/form2',\n  label: '랭킹게시판'\n}];\nvar adminMenu = [{\n  icon: 'edit',\n  to: '/admin/posts',\n  label: '요청 질문들'\n}];\nexport default function Navbar(_ref) {\n  var avatarUrl = _ref.avatarUrl,\n      displayName = _ref.displayName,\n      authExists = _ref.authExists,\n      goToAccount = _ref.goToAccount,\n      handleLogout = _ref.handleLogout,\n      closeAccountMenu = _ref.closeAccountMenu,\n      anchorEl = _ref.anchorEl,\n      handleMenu = _ref.handleMenu,\n      classes = _ref.classes,\n      isLoaded = _ref.isLoaded,\n      email = _ref.auth.email,\n      props = _objectWithoutProperties(_ref, [\"avatarUrl\", \"displayName\", \"authExists\", \"goToAccount\", \"handleLogout\", \"closeAccountMenu\", \"anchorEl\", \"handleMenu\", \"classes\", \"isLoaded\", \"auth\"]);\n\n  var path = props.history.location.pathname;\n  var isAdmin = email === 'admin@test.com';\n  return React.createElement(Menu, {\n    mode: \"inline\",\n    onClick: function onClick() {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(Logo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), !isLoaded ? React.createElement(Spin, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }) : authExists && isAdmin ? adminMenu.map(function (data, index) {\n    return React.createElement(MenuLink, Object.assign({\n      key: index,\n      isSelected: data.to === path\n    }, data, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }));\n  }) : userMenu.map(function (data, index) {\n    return React.createElement(MenuLink, Object.assign({\n      key: index,\n      isSelected: data.to === path\n    }, data, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }));\n  }), React.createElement(NavFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, authExists ? React.createElement(AccountMenu, {\n    avatarUrl: avatarUrl,\n    displayName: displayName,\n    onLogoutClick: handleLogout,\n    goToAccount: goToAccount,\n    closeAccountMenu: closeAccountMenu,\n    handleMenu: handleMenu,\n    anchorEl: anchorEl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }) : isLoaded ? React.createElement(LoginMenu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }) : React.createElement(Spin, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  })));\n}\nNavbar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  // from enhancer (withStyles)\n  displayName: PropTypes.string,\n  // from enhancer (flattenProps - profile)\n  avatarUrl: PropTypes.string,\n  // from enhancer (flattenProps - profile)\n  authExists: PropTypes.bool,\n  // from enhancer (withProps - auth)\n  goToAccount: PropTypes.func.isRequired,\n  // from enhancer (withHandlers - router)\n  handleLogout: PropTypes.func.isRequired,\n  // from enhancer (withHandlers - firebase)\n  closeAccountMenu: PropTypes.func.isRequired,\n  // from enhancer (withHandlers - firebase)\n  handleMenu: PropTypes.func.isRequired,\n  // from enhancer (withHandlers - firebase)\n  anchorEl: PropTypes.object // from enhancer (withStateHandlers - handleMenu)\n\n};","map":{"version":3,"sources":["/home/seungmin/face-web/src/containers/Navbar/Navbar.js"],"names":["React","styled","PropTypes","Link","AppBar","Toolbar","Typography","Layout","Menu","Icon","Spin","LIST_PATH","MenuLink","Logo","AccountMenu","LoginMenu","Header","Content","Footer","Sider","NavFooter","div","StyledLink","userMenu","icon","to","label","adminMenu","Navbar","avatarUrl","displayName","authExists","goToAccount","handleLogout","closeAccountMenu","anchorEl","handleMenu","classes","isLoaded","email","auth","props","path","history","location","pathname","isAdmin","map","data","index","propTypes","object","isRequired","string","bool","func"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport { Layout, Menu, Icon, Spin } from 'antd';\n\nimport { LIST_PATH } from 'constants/paths'\nimport MenuLink from 'components/MenuLink';\n\nimport Logo from './Logo';\nimport AccountMenu from './AccountMenu'\nimport LoginMenu from './LoginMenu'\n\nconst {\n  Header, Content, Footer, Sider,\n} = Layout;\n\nconst NavFooter = styled.div`\n  margin-top: 3rem;\n`;\n\nconst StyledLink = styled(Link)`\n  display: block;\n\n  width: 100%;\n\n  text-decoration: none;\n`;\n\nconst userMenu = [{\n  icon: 'radar-chart',\n  to: '/user/dashboard',\n  label: '측정하기',\n}, {\n  icon: 'edit',\n  to: '/user/form',\n  label: '질문하기',\n}, {\n  icon: 'edit',\n  to: '/user/form',\n  label: '상품후기게시판',\n},\n   {\n  icon: 'edit',\n  to: '/user/form2',\n  label: '랭킹게시판',\n}];\n\nconst adminMenu = [{\n  icon: 'edit',\n  to: '/admin/posts',\n  label: '요청 질문들',\n}];\n\nexport default function Navbar ({\n  avatarUrl,\n  displayName,\n  authExists,\n  goToAccount,\n  handleLogout,\n  closeAccountMenu,\n  anchorEl,\n  handleMenu,\n  classes,\n  isLoaded,\n  auth: { email },\n  ...props\n}) {\n  const path = props.history.location.pathname;\n  const isAdmin = email === 'admin@test.com';\n\n  return (\n    <Menu\n      mode=\"inline\"\n      onClick={() => {}}\n    >\n      <Logo />\n      {!isLoaded ? <Spin /> : authExists && isAdmin ? (\n          adminMenu.map((data, index) => <MenuLink key={index} isSelected={data.to === path} {...data} />)\n        ) : (\n          userMenu.map((data, index) => <MenuLink key={index} isSelected={data.to === path} {...data} />)\n      )}\n      <NavFooter>\n        {authExists ? (\n          <AccountMenu\n            avatarUrl={avatarUrl}\n            displayName={displayName}\n            onLogoutClick={handleLogout}\n            goToAccount={goToAccount}\n            closeAccountMenu={closeAccountMenu}\n            handleMenu={handleMenu}\n            anchorEl={anchorEl}\n          />\n        ) : isLoaded ? (\n          <LoginMenu />\n        ) : (\n          <Spin />\n        )}\n      </NavFooter>\n    </Menu>\n  );\n}\n\nNavbar.propTypes = {\n  classes: PropTypes.object.isRequired, // from enhancer (withStyles)\n  displayName: PropTypes.string, // from enhancer (flattenProps - profile)\n  avatarUrl: PropTypes.string, // from enhancer (flattenProps - profile)\n  authExists: PropTypes.bool, // from enhancer (withProps - auth)\n  goToAccount: PropTypes.func.isRequired, // from enhancer (withHandlers - router)\n  handleLogout: PropTypes.func.isRequired, // from enhancer (withHandlers - firebase)\n  closeAccountMenu: PropTypes.func.isRequired, // from enhancer (withHandlers - firebase)\n  handleMenu: PropTypes.func.isRequired, // from enhancer (withHandlers - firebase)\n  anchorEl: PropTypes.object // from enhancer (withStateHandlers - handleMenu)\n}\n"]},"metadata":{},"sourceType":"module"}